{"ast":null,"code":"var _jsxFileName = \"/Users/azamahmed/Desktop/crud-app/client/src/components/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s();\n\n  const [todoValue, setTodoValue] = useState(\"\");\n  const [todos, setTodos] = useState([]); // Sets the value of the todo\n\n  const handleInputChange = e => {\n    setTodoValue(e.target.value);\n  };\n\n  const getTodos = async () => {\n    const response = await axios.get(\"/todos\");\n    setTodos(response.data);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []); // Handles submit to make post request to database\n\n  const handleSubmit = e => {\n    /**\n     * Reset input field\n     * Add edit button using app.put\n     */\n    if (todoValue !== \"\") {\n      e.preventDefault();\n      const todo = {\n        title: todoValue\n      }; // axios post request to backend\n\n      axios.post(\"/add/todo\", todo).then(() => getTodos()).catch(err => console.error(err));\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  const handleDelete = id => {\n    axios.delete(`/delete/todo/${id}`).then(() => getTodos()).catch(err => console.error(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Router, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoForm, \"3Pthx6vO3XaIEXEwYNkRhs9QO1o=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/azamahmed/Desktop/crud-app/client/src/components/TodoForm.jsx"],"names":["axios","React","useState","useEffect","BrowserRouter","Router","Link","TodoForm","todoValue","setTodoValue","todos","setTodos","handleInputChange","e","target","value","getTodos","response","get","data","handleSubmit","preventDefault","todo","title","post","then","catch","err","console","error","log","handleDelete","id","delete"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,IAAlC,QAA8C,kBAA9C;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC,CAFqB,CAIrB;;AACA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAC/BJ,IAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,QAAV,CAAvB;AACAP,IAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAR;AACD,GAHD;;AAKAhB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT,CAdqB,CAkBrB;;AACA,QAAMI,YAAY,GAAIP,CAAD,IAAO;AAC1B;AACJ;AACA;AACA;AAEI,QAAIL,SAAS,KAAK,EAAlB,EAAsB;AACpBK,MAAAA,CAAC,CAACQ,cAAF;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,KAAK,EAAEf;AADI,OAAb,CAFoB,CAMpB;;AACAR,MAAAA,KAAK,CACFwB,IADH,CACQ,WADR,EACqBF,IADrB,EAEGG,IAFH,CAEQ,MAAMT,QAAQ,EAFtB,EAGGU,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHlB;AAID,KAXD,MAWO;AACLC,MAAAA,OAAO,CAACE,GAAR,CAAY,OAAZ;AACD;AACF,GApBD;;AAsBA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC3BhC,IAAAA,KAAK,CACFiC,MADH,CACW,gBAAeD,EAAG,EAD7B,EAEGP,IAFH,CAEQ,MAAMT,QAAQ,EAFtB,EAGGU,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHlB;AAID,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArDD;;GAAMpB,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst TodoForm = () => {\n  const [todoValue, setTodoValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  // Sets the value of the todo\n  const handleInputChange = (e) => {\n    setTodoValue(e.target.value);\n  };\n\n  const getTodos = async () => {\n    const response = await axios.get(\"/todos\");\n    setTodos(response.data);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  // Handles submit to make post request to database\n  const handleSubmit = (e) => {\n    /**\n     * Reset input field\n     * Add edit button using app.put\n     */\n\n    if (todoValue !== \"\") {\n      e.preventDefault();\n      const todo = {\n        title: todoValue,\n      };\n\n      // axios post request to backend\n      axios\n        .post(\"/add/todo\", todo)\n        .then(() => getTodos())\n        .catch((err) => console.error(err));\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  const handleDelete = (id) => {\n    axios\n      .delete(`/delete/todo/${id}`)\n      .then(() => getTodos())\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <Router></Router>\n    </div>\n  );\n};\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}