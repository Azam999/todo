{"ast":null,"code":"var _jsxFileName = \"/Users/azamahmed/Desktop/crud-app/client/src/components/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s();\n\n  const [todoValue, setTodoValue] = useState(\"\");\n  const [todos, setTodos] = useState([]); // Sets the value of the todo\n\n  const handleInputChange = e => {\n    setTodoValue(e.target.value);\n  };\n\n  const getTodos = async () => {\n    const response = await axios.get(\"/todos\");\n    setTodos(response.data);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []); // Handles submit to make post request to database\n\n  const handleSubmit = e => {\n    /**\n     * Clear input [x] button\n     * Reset input field\n     * Show todos in list\n     * Add delete button using app.delete by id\n     * Add edit button using app.put\n     */\n    getTodos();\n\n    if (todoValue !== \"\") {\n      e.preventDefault();\n      const todo = {\n        title: todoValue\n      }; // axios post request to backend\n\n      axios.post(\"/add/todo\", todo).then(() => console.log(\"Todo created\")).catch(err => console.error(err));\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \" d-flex flex-row\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control me-3\",\n        placeholder: \"Todo\",\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Todo\",\n        className: \"btn btn-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger ms-4\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoForm, \"3Pthx6vO3XaIEXEwYNkRhs9QO1o=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/azamahmed/Desktop/crud-app/client/src/components/TodoForm.jsx"],"names":["axios","React","useState","useEffect","TodoForm","todoValue","setTodoValue","todos","setTodos","handleInputChange","e","target","value","getTodos","response","get","data","handleSubmit","preventDefault","todo","title","post","then","console","log","catch","err","error","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAFqB,CAIrB;;AACA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/BJ,IAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,QAAV,CAAvB;AACAP,IAAAA,QAAQ,CAACM,QAAQ,CAACE,IAAV,CAAR;AACD,GAHD;;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT,CAdqB,CAkBrB;;AACA,QAAMI,YAAY,GAAIP,CAAD,IAAO;AAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AAEIG,IAAAA,QAAQ;;AAER,QAAIR,SAAS,KAAK,EAAlB,EAAsB;AACpBK,MAAAA,CAAC,CAACQ,cAAF;AACA,YAAMC,IAAI,GAAG;AACXC,QAAAA,KAAK,EAAEf;AADI,OAAb,CAFoB,CAMpB;;AACAL,MAAAA,KAAK,CACFqB,IADH,CACQ,WADR,EACqBF,IADrB,EAEGG,IAFH,CAEQ,MAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAFd,EAGGC,KAHH,CAGUC,GAAD,IAASH,OAAO,CAACI,KAAR,CAAcD,GAAd,CAHlB;AAID,KAXD,MAWO;AACLH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GAzBD;;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,QAAQ,EAAEP,YAA7C;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,WAAW,EAAC,MAHd;AAIE,QAAA,QAAQ,EAAER;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,UAA3B;AAAsC,QAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGF,KAAK,CAACqB,GAAN,CAAWT,IAAD,iBACT;AAAkB,UAAA,SAAS,EAAC,iBAA5B;AAAA,qBACGA,IAAI,CAACC,KADR,eAEE;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASD,IAAI,CAACU,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAtED;;GAAMzB,Q;;KAAAA,Q;AAwEN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nconst TodoForm = () => {\n  const [todoValue, setTodoValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  // Sets the value of the todo\n  const handleInputChange = (e) => {\n    setTodoValue(e.target.value);\n  };\n\n  const getTodos = async () => {\n    const response = await axios.get(\"/todos\");\n    setTodos(response.data);\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  // Handles submit to make post request to database\n  const handleSubmit = (e) => {\n    /**\n     * Clear input [x] button\n     * Reset input field\n     * Show todos in list\n     * Add delete button using app.delete by id\n     * Add edit button using app.put\n     */\n\n    getTodos();\n\n    if (todoValue !== \"\") {\n      e.preventDefault();\n      const todo = {\n        title: todoValue,\n      };\n\n      // axios post request to backend\n      axios\n        .post(\"/add/todo\", todo)\n        .then(() => console.log(\"Todo created\"))\n        .catch((err) => console.error(err));\n    } else {\n      console.log(\"error\");\n    }\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <form className=\" d-flex flex-row\" onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control me-3\"\n          placeholder=\"Todo\"\n          onChange={handleInputChange}\n        />\n        <input type=\"submit\" value=\"Add Todo\" className=\"btn btn-primary\" />\n      </form>\n\n      <div>\n        <ul className=\"list-group\">\n          {todos.map((todo) => (\n            <li key={todo.id} className=\"list-group-item\">\n              {todo.title}\n              <button className=\"btn btn-danger ms-4\">Delete</button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}